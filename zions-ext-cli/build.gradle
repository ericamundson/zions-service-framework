bootJar {
	enabled = true
	mainClassName = 'com.zions.ext.services.cli.CliApplication'
	archiveName = "zions-ext-cli-${version}.jar"
	//version =  null
}

sourceSets {
    integrationTest {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/groovy')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}
dependencies {
	compile project(':zions-ext-services')
	compile project(':zions-vsts-services')
	compile project(':zions-ccm-client-services')
	compile project(':zions-common')
	integrationTestCompile(
		'org.springframework.boot:spring-boot-starter-test',
		'org.springframework:spring-mock:2.0.8',
		'junit:junit:4.12',
		'cglib:cglib-nodep:3.1',
		'org.objenesis:objenesis:2.4',
		'org.codehaus.groovy:groovy-all:2.4.13',
		'org.spockframework:spock-core:1.2-groovy-2.4',
		'org.spockframework:spock-spring:1.2-groovy-2.4'
		)

}
task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperty "spring.profiles.active", 'integration-test'
    
}


integrationTest.mustRunAfter test

task updateBatJarVersion(type: Copy) {
	from('batch') {
		include( '**/*.bat' )
	}
	into("batch_out")
	
	filter {
		String line -> line.replaceAll('zions-ext-cli.jar', "zions-ext-cli-${version}.jar")
	}
}